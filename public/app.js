'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*
  Main Module Definition.
  - We will be using RoC reverse control pattern for better flexisblity
  - The main module is UN-AWARE of any of its dependinces except of 3rd party

  *Rules

  - DO NOT EDIT THIS FILE UNLESS ALL TEAM AGREE THAT ADDING A NEW 3rd PARTY
    DEPENDENCY TO APP IS OKAY BY EVERY ONE
  - All Modules should inherit from this main module
  - All Modules should declare its own Config and Run code blocks,
    Angular will take care of running them all.
  - Keep this module Clean, only Global Configurtion should be set here
*/
(function (angular) {
  'use strict';

  angular.module('webtrekk', ['ui.router']).config(["$urlServiceProvider", "$locationProvider", function ($urlServiceProvider, $locationProvider) {
    "ngInject";

    $locationProvider.html5Mode(true);
  }]); // use it to inject global 3rd parties
})(angular);

(function (angular) {
  'use strict';

  detailsController.$inject = ["usersStore", "$stateParams"];
  angular.module('webtrekk').controller('detailsController', detailsController);

  function detailsController(usersStore, $stateParams) {
    "ngInject";

    var _this = this;

    this.$onDestroy = componentWillUnmount.bind(this);

    this.data = usersStore.values.master;
    this.user = usersStore.values.master[$stateParams.customerId] || {};
    this.user.birthday = new Date(this.user.birthday);
    this.user.last_contact = new Date();

    this.$onInit = function () {
      // do some init stuff
      Object.keys($stateParams).map(function (key) {
        _this[key] = $stateParams[key];
      });
      console.log('users component', _this, $stateParams);
    };
  }

  function componentWillUnmount() {}
})(angular);
(function (angular) {
  'use strict';

  config.$inject = ["$stateProvider", "$urlServiceProvider"];
  angular.module('webtrekk').config(config).directive('details', detailsDirectionConfig);

  function config($stateProvider, $urlServiceProvider) {
    "ngInject";

    $stateProvider.state('customerDetails', {
      url: '/data/{customerId:[0-9]{1,8}}',
      template: "<details></details>"
    });
  }

  function detailsDirectionConfig() {
    return {
      templateUrl: '/details/details.html',
      scope: {},
      replace: true,
      controllerAs: "$ctrl",
      controller: 'detailsController'
    };
  }
})(angular);

angular.module('webtrekk').filter('ageFilter', function () {
  function calculateAge(birthday) {
    // birthday is a date
    if (!birthday) return 'N/A';
    if (!birthday.getTime) {
      birthday = new Date(birthday);
    }
    var ageDifMs = Date.now() - birthday.getTime();
    var ageDate = new Date(ageDifMs); // miliseconds from epoch
    return Math.abs(ageDate.getUTCFullYear() - 1970);
  }

  return function (birthdate) {
    return calculateAge(birthdate);
  };
});
angular.module('webtrekk').filter('genderFilter', function () {
  function genderFilter(gender) {
    // birthday is a date
    if (!gender) return 'N/A';
    var normalized = String(gender).toLowerCase();
    switch (['m', 'w'].indexOf(normalized)) {
      case 0:
        return 'Male';
      case 1:
        return 'Female';
      default:
        return 'N/A';
    }
  }

  return function (gender) {
    return genderFilter(gender);
  };
});
(function (angular) {
  'use strict';

  config.$inject = ["$stateProvider", "$urlServiceProvider"];
  angular.module('webtrekk').config(config).directive('main', function () {
    return {
      templateUrl: '/main/main.html',
      scope: {},
      replace: true,
      controllerAs: "$ctrl",
      controller: 'mainController'
    };
  });

  function config($stateProvider, $urlServiceProvider) {
    "ngInject";
    // setting self as main route

    $urlServiceProvider.rules.otherwise({ state: 'customerlist' });

    $stateProvider.state('customerlist', {
      url: '/',
      template: "<main></main>"
    });
  }
})(angular);

(function (angular) {
  'use strict';

  angular.module('webtrekk').controller('mainController', mainController);

  function mainController() {
    "ngInject";

    var _this2 = this;

    this.$onDestroy = componentWillUnmount.bind(this);

    this.sortUsers = sortUsers.bind(this);

    this.users = {};

    this.count = 6;

    this.$onInit = function () {
      // do some init stuff
      console.log('users component', _this2);
    };

    this.delete = function (row) {
      console.log('should delete', row);
    };
  }

  function componentWillUnmount() {}

  function sortUsers() {}
})(angular);

(function (angular) {
  'use strict';

  config.$inject = ["$stateProvider", "$urlServiceProvider"];
  angular.module('webtrekk').config(config).directive('navi', detailsDirectionConfig);

  function config($stateProvider, $urlServiceProvider) {
    "ngInject";

    $stateProvider.state('navi', {
      url: '/navi/{customerId:[0-9]{1,8}}',
      template: "<navi></navi>"
    });
  }

  function detailsDirectionConfig() {
    return {
      templateUrl: '/navi/navi.html',
      scope: {},
      replace: true,
      controllerAs: "$ctrl",
      controller: 'detailsController'
    };
  }
})(angular);

// (function(angular) {
//   'use strict';
//   angular.module('webtrekk')
//          .controller('detailsController', detailsController);

//   function detailsController( usersStore, $stateParams ){
//     "ngInject";
//         this.$onDestroy = componentWillUnmount.bind(this);

//         this.data = usersStore.values.master;
//         this.user = usersStore.values.master[$stateParams.customerId] || {};
//         this.user.birthday = new Date(this.user.birthday);
//         this.user.last_contact = new Date();

//         this.$onInit = () => {
//           // do some init stuff
//           Object.keys($stateParams).map(key=>{
//             this[key] = $stateParams[key];
//           })
//           console.log('users component', this, $stateParams);
//         }

//   }

//     function componentWillUnmount(){

//     }


//   })(angular);
(function (angular) {
  'use strict';

  $wt_storage.$inject = ["initialState", "StorageEngine", "STORAGE_ID"];
  angular.module('webtrekk').constant('StorageEngine', localStorage).constant('STORAGE_ID', 'webtrekk__local').constant('initialState', {
    master: [{ "customer_id": "1", "first_name": "Peter", "last_name": "Smith", "birthday": "1996-10-12", "gender": "m", "last_contact": "2013-06-01", "customer_lifetime_value": "191,12" }, { "customer_id": "2", "first_name": "Anna", "last_name": "Hopp", "birthday": "1987-05-03", "gender": "w", "last_contact": "2013-07-08", "customer_lifetime_value": "50,99" }, { "customer_id": "3", "first_name": "Christian", "last_name": "Cox", "birthday": "1991-02-21", "gender": "m", "last_contact": "2013-08-01", "customer_lifetime_value": "0" }, { "customer_id": "4", "first_name": "Roxy", "last_name": "Fox", "birthday": "1979-06-30", "gender": "w", "last_contact": "2012-01-29", "customer_lifetime_value": "213,12" }, { "customer_id": "5", "first_name": "Eric", "last_name": "Adam", "birthday": "1969-11-21", "gender": "m", "last_contact": "2013-03-18", "customer_lifetime_value": "1019,91" }],
    navi: [{ "customer_id": "1", "pages": "A", "timestamp": "2013-06-01 10:10:12" }, { "customer_id": "1", "pages": "B", "timestamp": "2013-06-01 10:11:12" }, { "customer_id": "1", "pages": "A", "timestamp": "2013-06-01 10:12:12" }, { "customer_id": "2", "pages": "C", "timestamp": "2013-07-08 09:03:09" }, { "customer_id": "2", "pages": "A", "timestamp": "2013-07-08 09:09:09" }, { "customer_id": "2", "pages": "D", "timestamp": "2013-07-08 09:19:09" }, { "customer_id": "3", "pages": "B", "timestamp": "2013-07-08 09:19:09" }, { "customer_id": "3", "pages": "A", "timestamp": "2013-07-08 09:19:10" }, { "customer_id": "4", "pages": "D", "timestamp": "2013-07-08 09:19:11" }, { "customer_id": "4", "pages": "A", "timestamp": "2013-07-08 09:19:12" }, { "customer_id": "5", "pages": "X", "timestamp": "2013-07-08 09:19:13" }, { "customer_id": "5", "pages": "A", "timestamp": "2013-07-08 09:19:14" }, { "customer_id": "5", "pages": "B", "timestamp": "2013-07-08 09:19:15" }]
  }).service('$wt_storage', $wt_storage);

  // @@todo should return a promise
  function $wt_storage(initialState, StorageEngine, STORAGE_ID) {
    "ngInject";

    this.get = get.bind(this);
    this.set = set;
    this.clear = clear.bind(this);
    this.reload = reload.bind(this);

    ////////////////
    function get() {
      try {
        var json = JSON.parse(StorageEngine.getItem(STORAGE_ID));
        if (!json || (typeof json === 'undefined' ? 'undefined' : _typeof(json)) !== (typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState))) {
          throw 'no intialdata';
        }
        this._error = null; // clear _error;
        return json;
      } catch (e) {
        if (this._error) {
          // there has been a previous error, here is a loop of calling this.get();
          this._error = null;
          console.warn('it looks like StorageEngine has failed... returning vanilla JS');
          return initialState;
        }
        this.set.call(this, initialState);
        this._error = e;
        return this.get();
      }
    }
    function set(data) {
      StorageEngine.setItem(STORAGE_ID, JSON.stringify(data));
    }
    function clear() {
      StorageEngine.set(STORAGE_ID, {});
    }
    function reload() {
      this.set(initialState);
      return this.get();
    }
  }
})(angular);

(function (angular) {
  'use strict';

  // angular.module('webtrekk')
  // .service('$wt_users', dataService)
  // .factory('$wt', $dataProvider)

  // function $dataProvider(initialState) {
  //   "ngInject";

  //   return function factory(engine, name, id){
  //     if(!initialState[name]){
  //       throw 'invlaid data requested'
  //     }
  //     if( !('setItem' in engine) || !('getItem' in engine) ){
  //       throw 'invlaid engine provided';
  //     }

  //     const STORAGE_ID = 'webtrekk_'+name;
  //     const normalize = s => String(s).toLowerCase();
  //     return {
  //       name: STORAGE_ID,
  //       get: function () {
  //         try{
  //           var json = JSON.parse(engine.getItem(STORAGE_ID));
  //           if(!json || typeof json !== typeof initialState[name]){
  //             throw 'no intialdata';
  //           }
  //           return json;
  //         }catch(e) {
  //           this.set(initialState[name]);
  //           return initialState[name];
  //         }
  //       },
  //       getBy: function(val, primary_key){
  //         let data = this.get();
  //         let _id = primary_key || 'customer_id';
  //         val = normalize(val);

  //         return Array.from(data).filter(i=>normalize(i[_id])===val);
  //       },
  //       put: function(id, Or){
  //         let data = this.get();
  //         return id in data ? data[id] : (Or || null);
  //       },
  //       set: function (data) {
  //         engine.setItem(STORAGE_ID, JSON.stringify(data));
  //       },
  //       delete: function(){
  //         engine.put(STORAGE_ID, []);
  //       }
  //     }
  //   }
  // }

  // function usersStore($wt_storage){
  //   "ngInject";
  //   const master = $dataProvider(localStorage, 'master');
  //   const navi = $dataProvider(localStorage, 'navi');

  //   const data = {
  //     navi: navi.get(),
  //     master: master.get(),
  //   };

  //   const getNavigations = function(id){
  //     return data.navi.filter(i=>i.customer_id===this.customer_id);
  //   };

  //   data.byId = data.master.reduce((carry, item)=>Object.assign(
  //     carry, {
  //       [item.customer_id]: Object.assign({
  //         getNavigations: getNavigations.bind(item)
  //       },item)
  //     }),{});
  //   data.ids = Object.keys(data.byId);
  //   data.sortBy = function(key){
  //     this.ids = this.ids.sort((a, b)=>data[a][key] === data[b][key] ? 0 : data[a][key] < data[b][key] );
  //     return this.ids;
  //   }.bind(data);


  //   console.log('userfactory Init', data);

  //   return data;
  // }
})(angular);

(function (angular) {
  'use strict';

  angular.module("webtrekk").run(["$templateCache", function ($templateCache) {
    $templateCache.put("/navi/navi.html", "<div class=\"has__form\">\n <h1 ng-if=\"$ctrl.user.customer_id\">{{$ctrl.user.first_name}} {{$ctrl.user.last_name}} Navigation history</h1>\n <h1 ng-if=\"!$ctrl.user.customer_id\">no valid user id provided</h1>\n</div>");
    $templateCache.put("/main/main.html", "<table id=\"main_overview_table\" class=\"table table-sm table-hover table-striped table-bordered\" style=\"margin:20px auto\">\n <caption style=\"caption-side:top;\">\n <h1>Customer Overview</h1>\n <a ui-sref=\"customerDetails({customerId: 0})\" class=\"btn btn-primary\">\n Create new customer\n <span class=\"badge badge-secondary\">{{$ctrl.count}}+</span>\n </button>\n </caption>\n <thead class=\"thead-inverse\">\n <tr>\n <th>First name</th>\n <th>Last name</th>\n <th>Age</th>\n <th>Gender</th>\n <th>options</th>\n </tr>\n </thead>\n <tr ng-repeat=\"row in $ctrl.users.values.master\">\n <td> {{row.first_name}} </td>\n <td> {{row.last_name}} </td>\n <td> {{row.birthday|ageFilter}} </td>\n <td> {{row.gender|genderFilter}} </td>\n <td>\n <div class=\"flex__row\">\n <a ui-sref=\"customerDetails({customerId: row.customer_id})\" class=\"btn btn-primary\">\n Edit\n </a>\n <button class=\"btn btn-primary\" ng-click=\"$ctrl.delete(row)\">\n Delete\n </button>\n <a ui-sref=\"navi({customerId: row.customer_id})\" class=\"btn btn-success\">\n Navi\n </a>\n </div>\n </td>\n </tr>\n</table>");
    $templateCache.put("/details/details.html", "<div class=\"has__form\">\n <h1 ng-if=\"$ctrl.user.customer_id\">{{$ctrl.user.first_name}} {{$ctrl.user.last_name}} Details</h1>\n <h1 ng-if=\"!$ctrl.user.customer_id\">Create New user</h1>\n <form>\n <div class=\"form-group\" ng-if=\"$ctrl.user.customer_id\">\n <label for=\"customer_id\">customer id</label>\n <input type=\"number\" class=\"form-control\" id=\"customer_id\" disabled ng-value=\"{{$ctrl.user.customer_id/1}}\" placeholder=\"customer_id\">\n <small ng-if=\"$ctrl.errors.customer_id\" id=\"customer_idHelp\" class=\"form-text text-danger\">{{$ctrl.errors.customer_id}}</small>\n </div>\n\n <div class=\"form-group\">\n <label for=\"first_name\">first name</label>\n <input type=\"string\" class=\"form-control\" id=\"first_name\" ng-model=\"$ctrl.user.first_name\" placeholder=\"first_name\">\n <small ng-if=\"$ctrl.errors.first_name\" id=\"first_nameHelp\" class=\"form-text text-danger\">{{$ctrl.errors.first_name}}</small>\n </div>\n \n <div class=\"form-group\">\n <label for=\"last_name\">last name</label>\n <input type=\"string\" class=\"form-control\" id=\"last_name\" ng-model=\"$ctrl.user.last_name\" placeholder=\"last_name\">\n <small ng-if=\"$ctrl.errors.last_name\" id=\"last_nameHelp\" class=\"form-text text-danger\">{{$ctrl.errors.last_name}}</small>\n </div>\n\n <div class=\"form-group\">\n <label for=\"birthday\">birthday</label>\n <input\n placeholder=\"yyyy-MM-dd\"\n min=\"1970-01-01\" max=\"2017-12-22\" required type=\"date\" class=\"form-control\" id=\"birthday\" ng-model=\"$ctrl.user.birthday\" placeholder=\"birthday\">\n <small ng-if=\"$ctrl.errors.birthday\" id=\"birthdayHelp\" class=\"form-text text-danger\">{{$ctrl.errors.birthday}}</small>\n </div>\n \n <div class=\"form-group\">\n <label for=\"gender\">gender</label>\n <select name=\"gender\" class=\"form-control\" ng-model=\"$ctrl.user.gender\">\n <option value=\"m\">Male</option>\n <option value=\"w\">Female</option>\n </select>\n </div>\n \n <div class=\"form-group\">\n <label for=\"last_contact\">last contact</label>\n <input ng-disabled=\"!$ctrl.user.customer_id\" type=\"date\" class=\"form-control\" id=\"last_contact\" ng-model=\"$ctrl.user.last_contact\" placeholder=\"last_contact\">\n <small ng-if=\"$ctrl.errors.last_contact\" id=\"last_contactHelp\" class=\"form-text text-danger\">{{$ctrl.errors.last_contact}}</small>\n </div>\n \n <div class=\"form-group\">\n <label for=\"customer_lifetime_value\">customer lifetime_value</label>\n <input type=\"string\" class=\"form-control\" id=\"customer_lifetime_value\" ng-model=\"$ctrl.user.customer_lifetime_value\" placeholder=\"customer_lifetime_value\">\n <small ng-if=\"$ctrl.errors.customer_lifetime_value\" id=\"customer_lifetime_valueHelp\" class=\"form-text text-danger\">{{$ctrl.errors.customer_lifetime_value}}</small>\n </div>\n\n <hr/>\n <div style=\"min-width:100%\">\n <button class=\"btn btn-primary\">\n save and go back\n </button>\n <a ui-sref=\"customerlist()\" class=\"btn btn-dark\">\n cancel\n </a>\n </div>\n </form>\n</div>");
  }]);
})(angular);